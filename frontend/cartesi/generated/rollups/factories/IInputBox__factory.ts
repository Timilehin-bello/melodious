/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IInputBox, IInputBoxInterface } from "../IInputBox";

const _abi = [
  {
    type: "function",
    name: "addInput",
    inputs: [
      {
        name: "appContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "payload",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getDeploymentBlockNumber",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getInputHash",
    inputs: [
      {
        name: "appContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNumberOfInputs",
    inputs: [
      {
        name: "appContract",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "InputAdded",
    inputs: [
      {
        name: "appContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "input",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InputTooLarge",
    inputs: [
      {
        name: "appContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputLength",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxInputLength",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
] as const;

export class IInputBox__factory {
  static readonly abi = _abi;
  static createInterface(): IInputBoxInterface {
    return new utils.Interface(_abi) as IInputBoxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInputBox {
    return new Contract(address, _abi, signerOrProvider) as IInputBox;
  }
}
