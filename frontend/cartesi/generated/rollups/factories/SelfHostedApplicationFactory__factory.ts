/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SelfHostedApplicationFactory,
  SelfHostedApplicationFactoryInterface,
} from "../SelfHostedApplicationFactory";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "authorityFactory",
        type: "address",
        internalType: "contract IAuthorityFactory",
      },
      {
        name: "applicationFactory",
        type: "address",
        internalType: "contract IApplicationFactory",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "calculateAddresses",
    inputs: [
      {
        name: "authorityOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "epochLength",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "appOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "templateHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "dataAvailability",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "application",
        type: "address",
        internalType: "address",
      },
      {
        name: "authority",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deployContracts",
    inputs: [
      {
        name: "authorityOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "epochLength",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "appOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "templateHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "dataAvailability",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "application",
        type: "address",
        internalType: "contract IApplication",
      },
      {
        name: "authority",
        type: "address",
        internalType: "contract IAuthority",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getApplicationFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IApplicationFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuthorityFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAuthorityFactory",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x60c0346100a657601f61061238819003918201601f19168301916001600160401b038311848410176100aa5780849260409485528339810103126100a6578051906001600160a01b03821682036100a65760200151906001600160a01b03821682036100a65760805260a05260405161055390816100bf823960805181818160de0152818161022e01526102ae015260a051818181605d0152818161016e01526103420152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816350567b3a1461025d5750806375689f8314610219578063938f7adc146100905763e63d50ff14610048575f80fd5b3461008c575f36600319011261008c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5f80fd5b3461008c5760206100a036610423565b604051631442f7bb60e01b81526001600160a01b039097166004880152602487019590955260448601859052959094939192919084806064810103817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9384156101f157602094610162915f916101fc575b5060018060a01b0316956040519788958695634269667b60e01b875289600488015260018060a01b03166024870152604486015260a0606486015260a48501916104de565b608483019190915203817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101f1576040925f926101c0575b5082516001600160a01b0390921682526020820152f35b6101e391925060203d6020116101ea575b6101db81836104a8565b8101906104fe565b90836101a9565b503d6101d1565b6040513d5f823e3d90fd5b6102139150863d88116101ea576101db81836104a8565b8861011d565b3461008c575f36600319011261008c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461008c578060206102a98261027236610423565b989489919a949b93989296631d9324cd60e31b855260048501604091949392606082019560018060a01b0316825260208201520152565b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19182156101f1575f926103db575b50604051630b30fbdf60e21b81526001600160a01b0392831660048201819052969092166024830152604482019290925260a0606482015292602092849283926103359160a4850191906104de565b608483019190915203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156101f1575f91610396575b50604080516001600160a01b0390921682526020820192909252f35b90506020813d6020116103d3575b816103b1602093836104a8565b8101031261008c5751906001600160a01b038216820361008c5790604061037a565b3d91506103a4565b9091506020813d60201161041b575b816103f7602093836104a8565b8101031261008c5751926001600160a01b038416840361008c5792906103356102e6565b3d91506103ea565b9060c060031983011261008c576004356001600160a01b038116810361008c5791602435916044356001600160a01b038116810361008c57916064359160843567ffffffffffffffff811161008c578260238201121561008c5780600401359267ffffffffffffffff841161008c576024848301011161008c57602401919060a43590565b90601f8019910116810190811067ffffffffffffffff8211176104ca57604052565b634e487b7160e01b5f52604160045260245ffd5b908060209392818452848401375f828201840152601f01601f1916010190565b9081602091031261008c57516001600160a01b038116810361008c579056fea26469706673582212204b2ea3508bcf8b38d191ad23a2b864f854fb6520adc51590b586fda5413a0a6c64736f6c634300081d0033";

type SelfHostedApplicationFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SelfHostedApplicationFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SelfHostedApplicationFactory__factory extends ContractFactory {
  constructor(...args: SelfHostedApplicationFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    authorityFactory: string,
    applicationFactory: string,
    overrides?: Overrides & { from?: string }
  ): Promise<SelfHostedApplicationFactory> {
    return super.deploy(
      authorityFactory,
      applicationFactory,
      overrides || {}
    ) as Promise<SelfHostedApplicationFactory>;
  }
  override getDeployTransaction(
    authorityFactory: string,
    applicationFactory: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      authorityFactory,
      applicationFactory,
      overrides || {}
    );
  }
  override attach(address: string): SelfHostedApplicationFactory {
    return super.attach(address) as SelfHostedApplicationFactory;
  }
  override connect(signer: Signer): SelfHostedApplicationFactory__factory {
    return super.connect(signer) as SelfHostedApplicationFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SelfHostedApplicationFactoryInterface {
    return new utils.Interface(_abi) as SelfHostedApplicationFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SelfHostedApplicationFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SelfHostedApplicationFactory;
  }
}
