/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Portal, ERC20PortalInterface } from "../ERC20Portal";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "inputBox",
        type: "address",
        internalType: "contract IInputBox",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositERC20Tokens",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "contract IERC20",
      },
      {
        name: "appContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "execLayerData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getInputBox",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IInputBox",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "ERC20TransferFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a034606d57601f61036c38819003918201601f19168301916001600160401b03831184841017607157808492602094604052833981010312606d57516001600160a01b0381168103606d576080526040516102e69081610086823960805181818161018b015261024b0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c908162aace9a1461023957506395854b8114610031575f80fd5b346101d95760803660031901126101d9576004356001600160a01b0381168082036101d9576024356001600160a01b038116908190036101d957604435916064359167ffffffffffffffff83116101d957366023840112156101d95782600401359167ffffffffffffffff83116101d95736602484860101116101d95760205f916064604051809481936323b872dd60e01b83523360048401528760248401528a60448401525af19081156101e4575f916101fe575b50156101ef5761014360686020958460649560246040519889948b86019c6bffffffffffffffffffffffff199060601b168d523360601b60348701526048860152018484013781015f838201520301601f19810185528461027a565b6040519485938492631789cd6360e01b84526004840152604060248401525180918160448501528484015e5f838284010152601f801991011681010301815f60018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af180156101e4576101b957005b602090813d83116101dd575b6101cf818361027a565b810103126101d957005b5f80fd5b503d6101c5565b6040513d5f823e3d90fd5b633c9fd93960e21b5f5260045ffd5b90506020813d602011610231575b816102196020938361027a565b810103126101d9575180151581036101d9575f6100e7565b3d915061020c565b346101d9575f3660031901126101d9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff82111761029c57604052565b634e487b7160e01b5f52604160045260245ffdfea26469706673582212205a06932ace63c2995cec9c8d81b4cbac3f423f41487e91c42d770d4658663e4864736f6c634300081d0033";

type ERC20PortalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PortalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Portal__factory extends ContractFactory {
  constructor(...args: ERC20PortalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    inputBox: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ERC20Portal> {
    return super.deploy(inputBox, overrides || {}) as Promise<ERC20Portal>;
  }
  override getDeployTransaction(
    inputBox: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(inputBox, overrides || {});
  }
  override attach(address: string): ERC20Portal {
    return super.attach(address) as ERC20Portal;
  }
  override connect(signer: Signer): ERC20Portal__factory {
    return super.connect(signer) as ERC20Portal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PortalInterface {
    return new utils.Interface(_abi) as ERC20PortalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Portal {
    return new Contract(address, _abi, signerOrProvider) as ERC20Portal;
  }
}
