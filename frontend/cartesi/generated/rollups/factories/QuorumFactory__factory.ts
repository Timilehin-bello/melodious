/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { QuorumFactory, QuorumFactoryInterface } from "../QuorumFactory";

const _abi = [
  {
    type: "function",
    name: "calculateQuorumAddress",
    inputs: [
      {
        name: "validators",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "epochLength",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "newQuorum",
    inputs: [
      {
        name: "validators",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "epochLength",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IQuorum",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "newQuorum",
    inputs: [
      {
        name: "validators",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "epochLength",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IQuorum",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "QuorumCreated",
    inputs: [
      {
        name: "quorum",
        type: "address",
        indexed: false,
        internalType: "contract IQuorum",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60808060405234601557610c1f908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081632f74f862146101c957508063ca8f271c1461010b5763d4af3bc81461003d575f80fd5b346101075760403660031901126101075760043567ffffffffffffffff81116101075761006e90369060040161024c565b90604051916108c1908184019084821067ffffffffffffffff8311176100f35784936100a2936103298639602435926102b4565b03905ff080156100e85760209060018060a01b03167f446698b70271bce331e53210572bd37ac8c590b6cdca2e6763e6448243cba80282604051838152a1604051908152f35b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b34610107576020600b61019a6101203661027d565b93909192866108c1916101696040519661013c84860189610306565b84885283880194610329863961015b60405197889286840195866102b4565b03601f198101875286610306565b60405194859383850197518091895e840190838201905f8252519283915e01015f815203601f198101835282610306565b51902090604051916040830152838201523081520160ff8153605590206040516001600160a01b039091168152f35b34610107576101d73661027d565b939291906108c1918285019385851067ffffffffffffffff8611176100f35785946102069461032987396102b4565b03905ff580156100e85760209060018060a01b03167f446698b70271bce331e53210572bd37ac8c590b6cdca2e6763e6448243cba80282604051838152a1604051908152f35b9181601f840112156101075782359167ffffffffffffffff8311610107576020808501948460051b01011161010757565b6060600319820112610107576004359067ffffffffffffffff8211610107576102a89160040161024c565b90916024359060443590565b6040808252810183905293929160608501905f905b8082106102db57505060209150930152565b909183356001600160a01b0381169190829003610107579081526020938401930191600101906102c9565b90601f8019910116810190811067ffffffffffffffff8211176100f35760405256fe60c0604052346101b8576108c180380380610019816101d0565b9283398101906040818303126101b85780516001600160401b0381116101b857810182601f820112156101b8578051926001600160401b0384116101bc578360051b9160208061006a8186016101d0565b8097815201938201019182116101b857602001915b818310610198578460208501518015610153576080525f905f5b81518110156101215760018060a01b0360208260051b8401015116805f52600160205260405f2054156100d0575b50600101610099565b92905f19821461010d57600180920193805f52826020528460405f2055845f52600260205260405f2090838060a01b0319825416179055906100c7565b634e487b7160e01b5f52601160045260245ffd5b8260a0526040516106cb90816101f6823960805181818160f80152610180015260a0518181816102e6015261054d0152f35b60405162461bcd60e51b815260206004820152601d60248201527f65706f6368206c656e677468206d757374206e6f74206265207a65726f0000006044820152606490fd5b82516001600160a01b03811681036101b85781526020928301920161007f565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b038111838210176101bc5760405256fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146105da575080630a6f1fe8146105a25780631c45396a146105705780631e526e4514610536578063446ccbf0146104f25780634b53459c146104925780634b84231c1461041c5780636470af001461015c5780637051bfd51461011b578063cfe8a73b146100e15763e5cc866414610095575f80fd5b346100dd5760403660031901126100dd576001600160a01b036100b6610647565b165f525f60205260405f206024355f52602052602060ff60405f2054166040519015158152f35b5f80fd5b346100dd575f3660031901126100dd5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100dd576101293661065d565b9160018060a01b03165f52600460205260405f20905f5260205260405f20905f52602052602060405f2054604051908152f35b346100dd5761016a3661065d565b335f52600160205260405f20549283156103d7577f000000000000000000000000000000000000000000000000000000000000000080156103c3575f19810181811161036b57818506036103ad5750438310156103965760018060a01b031692836040518481528360208201527ff4ff953641f10e17dd93c0bc51334cb1f711fdcb4e37992021a5973f7a958f0960403392a3835f52600460205260405f20835f5260205260405f20825f5260205260405f2090845f52600360205260405f20845f5260205260405f20600183019061025a838360019160ff918160081c5f52602052161b60405f205416151590565b1561026157005b60018101610286848260019160ff918160081c5f52602052161b60405f205416151590565b61037f57906102b0846102d79594938160081c5f52602052600160ff60405f2092161b8154179055565b6102ba8154610687565b90558160081c5f52602052600160ff60405f2092161b8154179055565b6102e18154610687565b8091557f000000000000000000000000000000000000000000000000000000000000000060011c600101908160011161036b571461031b57005b7f0f2cd00a405c0d1a66050307b6722c4788db6ed57aa3589a5c38da535cc3ce6391604091845f525f602052825f20815f52602052825f20600160ff1982541617905582519182526020820152a2005b634e487b7160e01b5f52601160045260245ffd5b8688637e94264560e01b5f5260045260245260445ffd5b8263d804a6a160e01b5f526004524360245260445ffd5b8363c92a0d6960e01b5f5260045260245260445ffd5b634e487b7160e01b5f52601260045260245ffd5b60405162461bcd60e51b815260206004820152601f60248201527f51756f72756d3a2063616c6c6572206973206e6f742076616c696461746f72006044820152606490fd5b346100dd5760803660031901126100dd576001600160a01b0361043d610647565b165f52600460205260405f206024355f5260205260405f206044355f526020526020610488606435600160405f200160019160ff918160081c5f52602052161b60405f205416151590565b6040519015158152f35b346100dd5760603660031901126100dd576001600160a01b036104b3610647565b165f52600360205260405f206024355f526020526020610488604435600160405f200160019160ff918160081c5f52602052161b60405f205416151590565b346100dd5760403660031901126100dd576001600160a01b03610513610647565b165f52600360205260405f206024355f52602052602060405f2054604051908152f35b346100dd575f3660031901126100dd5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100dd5760203660031901126100dd576004355f526002602052602060018060a01b0360405f205416604051908152f35b346100dd5760203660031901126100dd576001600160a01b036105c3610647565b165f526001602052602060405f2054604051908152f35b346100dd5760203660031901126100dd576004359063ffffffff60e01b82168092036100dd57602091631e492d3160e11b811490811561061c575b5015158152f35b63ab98083b60e01b811491508115610636575b5083610615565b6301ffc9a760e01b1490508361062f565b600435906001600160a01b03821682036100dd57565b60609060031901126100dd576004356001600160a01b03811681036100dd57906024359060443590565b5f19811461036b576001019056fea2646970667358221220aff7a46775401da3aaae68b12e06d678cde656122fb1f878333f065a63c2162b64736f6c634300081d0033a264697066735822122022a6444b3a98c53207a398b46701d228c7e3c360e25f30abf595056e0dfa1f1964736f6c634300081d0033";

type QuorumFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuorumFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuorumFactory__factory extends ContractFactory {
  constructor(...args: QuorumFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<QuorumFactory> {
    return super.deploy(overrides || {}) as Promise<QuorumFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): QuorumFactory {
    return super.attach(address) as QuorumFactory;
  }
  override connect(signer: Signer): QuorumFactory__factory {
    return super.connect(signer) as QuorumFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuorumFactoryInterface {
    return new utils.Interface(_abi) as QuorumFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuorumFactory {
    return new Contract(address, _abi, signerOrProvider) as QuorumFactory;
  }
}
