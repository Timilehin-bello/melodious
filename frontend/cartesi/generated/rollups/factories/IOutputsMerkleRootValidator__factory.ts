/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IOutputsMerkleRootValidator,
  IOutputsMerkleRootValidatorInterface,
} from "../IOutputsMerkleRootValidator";

const _abi = [
  {
    type: "function",
    name: "isOutputsMerkleRootValid",
    inputs: [
      {
        name: "appContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "outputsMerkleRoot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IOutputsMerkleRootValidator__factory {
  static readonly abi = _abi;
  static createInterface(): IOutputsMerkleRootValidatorInterface {
    return new utils.Interface(_abi) as IOutputsMerkleRootValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOutputsMerkleRootValidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IOutputsMerkleRootValidator;
  }
}
